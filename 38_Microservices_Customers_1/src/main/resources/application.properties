#server port changing
server.port=9977

#Database Configuration
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=system
spring.datasource.password=manager

#Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#To get connected with config server MS from current microservices
#Always gets the details from config server which is running on port of 8888
#spring.config.import=optional:configserver:
#Always gets the details from config server which is running on port of 8572
#spring.config.import=optional:configserver:http://localhost:8572

#Microservices Configuration
address.service.name.url=http://localhost:9966/api/address/
#address.service.name.url=http://ADDRESS-SERVICE/api/address/

#Application name configuration
spring.application.name=Customer-Service

#Adding the configuration to register this service with Eureka(5555)
#eureka.client.service-url.defaultZone=http://localhost:5555/eureka/

#Setting the active Profile
#spring.profiles.active=dev

#Enabling the Actuators in Customer Service
#management.endpoints.web.exposure.include=*

#logging configuration
#logging.level.com.ashokit=info

#log message layout configuration
#logging.pattern.console=%d{dd-MM-YYYY HH:MM:SS} %clr([%level]){blue} [%c]-{%M} {%t} %m%n

#Writing the logs into file
#logging.file.name=logs/customers.log

#Logging banner into application.log
#spring.main.banner-mode=log

#setting some size to log files
#logging.logback.rollingpolicy.max-file-size=20KB

#15days log files will be stored
#logging.logback.rollingpolicy.max-history=15

#spring.cloud.compatibility-verifier.enabled=false
#management.tracing.sampling.probability=1.0


#configuring the circuit breaker changes

# This configuration is for enabling to show Health Actuator in Spring Boot Application
#management.endpoint.health.show-details=always
# This configuration is to enable all Actuators endpoints(13) in Spring Boot Application
#management.endpoints.web.exposure.include=*
# This configuration is to enable circuit breaker functionality in Spring Boot Application
#management.health.circuitbreakers.enabled=true
#This property is for enabling to verify the circuit breaker status(Closed,Open,Half_open)
#resilience4j.circuitbreaker.instances.Address-Service.registerHealthIndicator=true
#By default circuit breaker will not be enabled It should be opened certain no of requests got failed.
#resilience4j.circuitbreaker.instances.Address-Service.slidingWindowType=COUNT_BASED
#This property is for after failing the 5 Requests Circuit Breaker will change the status from closed to open 
#resilience4j.circuitbreaker.instances.Address-Service.slidingWindowSize=5
#This property is for setting failurerateThreshold if 50% calls are failed circuitBreaker should open it
#resilience4j.circuitbreaker.instances.Address-Service.failureRateThreshold=50
#This property is for setting Time period of an circuit breaker open state before moving to half open state
#resilience4j.circuitbreaker.instances.Address-Service.waitDurationInOpenState=35s
#This property is for setting no of calls permitted in half-open state of an circuit breaker
#resilience4j.circuitbreaker.instances.Address-Service.permittedNumberOfCallsInHalfOpenState=3
#This property is for just enabling the automatic transition from open to half open state.
#resilience4j.circuitbreaker.instances.Address-Service.automaticTransitionFromOpenToHalfOpenEnabled=true
#This is enabling the buffer size
#resilience4j.circuitbreaker.instances.Address-Service.event-consumer-buffer-size=10

#Retry Mechanism Configuration
#resilience4j.retry.instances.Address-Service.max-attempts=3
#resilience4j.retry.instances.Address-Service.wait-duration=10s

#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://localhost:9955/eureka

